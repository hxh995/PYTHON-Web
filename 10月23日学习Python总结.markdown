### 9月23日学习笔记 ###
##### I.python属性私有化 #####
1. python没有属性约束关键词，而是通过加下划线的方式约束属性
2. 比如某个类有属性x,_x（单前置下划线）：不能被其他模块导入，但是类对象和子类可以访问
__x(双前置下划线）：避免有子类中的属性名冲突，无法在外部直接访问（名字重整所以访问不到），但是可以通过property属性间接访问
3. __x__（双前后下划线）：用户名字空间的魔法对象或属性。例如：__init__,不要自己发明这样的名字
4. x_（单后置下划线）：避免与Python关键词冲突
##### II.python多继承的MRO顺序 #####
1. python支持多继承，然而多继承就可能出现某个父类被重复访问到的情况，导致浪费资源，为了解决这种情况，python3.x使用了以广度优先搜索为基础的C3算法
来解决这个问题，关于C3算法的具体内容，后面会深入学习。
2. 可通过类名调用__mro__魔法属性来查看super()将要调用的类的方法（子类不一定会调用父类的方法，也有可能调用子类的方法），也可以通过super(class,self)来跳过某些
类的调用，直接调用__mro__中class后面一个类
##### III.python接受不定参数的*args和**kwargs #####
1. 如函数def f(a,*args,**kwargs):  pass  如果调用f时是这样的f(a,b,c,name="psq",age="18")
则args=(b,c,d) kwargs = {'name':'psq','age':'12'},即*args接收可变传送的参数（简单形式），将其变为元组，**kwargs接收可变传递的参数（字典模式）将其变为字典
2. args 和 kwargs可用来拆包
##### IV.property属性 #####
1. 使用property可以是让方法的调用向属性的调用那样简单，而且不必像调用函数那样考虑要传什么参数，简单而易于理解
2. 可以通过property属性访问私有的对象。也常用于分页技术
3. 在python3.x中有三种property装饰器，property,setter（设置属性）,和deleter（删除属性）
4. 细节还需要自我实现
##### V.魔法属性和魔法方法 #####
1. python有许多魔法属性，如指向类的__class__,还有property的文档__docs__等等
我们最好不要自己发明这样的属性。
2. python中也有许多魔法方法，如__new__创建对象，注意python创建对象和初始化并非一起的，而是通过__new__魔法属性和__init__魔法属性
分别来创建和初始化对象的。

