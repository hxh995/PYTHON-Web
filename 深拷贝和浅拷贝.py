import copy

# a = [11, 22]
# b = a  # b只是指向a的地址
# c = copy.copy(a)  # c拷贝了a的内容,但是地址变了
# print(id(a))   # 2796793717320
# print(id(b))   # 2796793717320
# print(id(c))   # 2796793717384

a = [[11, 22], [33, 44]]
b = a
c = copy.copy(a)
d = copy.deepcopy(a)
# print(id(a))
# print(id(b))
# print(id(c))
# print(id(d))
# 结果分别为
# 2613427108488
# 2613427108488
# 2613427133832
# 2613427133704
# print(id(a[0]))
# print(id(b[0]))
# print(id(c[0]))
# print(id(d[0]))
# 结果分别为
# 2131148694088
# 2131148694088
# 2131148694088
# 2131198046024
a.append([55])
print(b)
print(c)
print(d)
# 结果分别为
# [[11, 22], [33, 44], [55]]
# [[11, 22], [33, 44]]
# [[11, 22], [33, 44]]
a[0].append(66)
print(b)
print(c)
print(d)
# 结果分别为
# b [[11, 22, 66], [33, 44], [55]]
# c [[11, 22, 66], [33, 44]]
# d [[11, 22], [33, 44]]
# 总结:
# 简单赋值 b = a 只是让b指向了a的地址，并不会拷贝a中的内容
# 浅拷贝 c = copy.copy(a) c只是拷贝了a的框架,并没有拷贝a中的值，而是让c[0]指向a[0]的地址，c[1]指向a[1]的地址
# 深拷贝 d = copy.deepcopy(a) d不仅拷贝了a中所有内容，拷贝完后，d与a无任何关系
